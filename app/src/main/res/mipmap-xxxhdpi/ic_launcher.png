<?xml version="1.0" encoding="UTF-8"?>
<root>
  <item name="android.media.AsyncPlayer void play(android.content.Context, android.net.Uri, boolean, android.media.AudioAttributes) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AsyncPlayer void play(android.content.Context, android.net.Uri, boolean, android.media.AudioAttributes) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AsyncPlayer void play(android.content.Context, android.net.Uri, boolean, android.media.AudioAttributes) 3">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioAttributes.Builder android.media.AudioAttributes.Builder setContentType(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.media.AudioAttributes.CONTENT_TYPE_UNKNOWN, android.media.AudioAttributes.CONTENT_TYPE_SPEECH, android.media.AudioAttributes.CONTENT_TYPE_MUSIC, android.media.AudioAttributes.CONTENT_TYPE_MOVIE, android.media.AudioAttributes.CONTENT_TYPE_SONIFICATION}" />
    </annotation>
  </item>
  <item name="android.media.AudioAttributes.Builder android.media.AudioAttributes.Builder setUsage(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.media.AudioAttributes.USAGE_UNKNOWN, android.media.AudioAttributes.USAGE_MEDIA, android.media.AudioAttributes.USAGE_VOICE_COMMUNICATION, android.media.AudioAttributes.USAGE_VOICE_COMMUNICATION_SIGNALLING, android.media.AudioAttributes.USAGE_ALARM, android.media.AudioAttributes.USAGE_NOTIFICATION, android.media.AudioAttributes.USAGE_NOTIFICATION_RINGTONE, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_REQUEST, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_INSTANT, android.media.AudioAttributes.USAGE_NOTIFICATION_COMMUNICATION_DELAYED, android.media.AudioAttributes.USAGE_NOTIFICATION_EVENT, android.media.AudioAttributes.USAGE_ASSISTANCE_ACCESSIBILITY, android.media.AudioAttributes.USAGE_ASSISTANCE_NAVIGATION_GUIDANCE, android.media.AudioAttributes.USAGE_ASSISTANCE_SONIFICATION, android.media.AudioAttributes.USAGE_GAME, android.media.AudioAttributes.USAGE_ASSISTANT}" />
    </annotation>
  </item>
  <item name="android.media.AudioDeviceInfo int[] getChannelCounts()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioDeviceInfo int[] getChannelIndexMasks()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioDeviceInfo int[] getChannelMasks()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioDeviceInfo int[] getEncodings()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioDeviceInfo int[] getSampleRates()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioDeviceInfo java.lang.String getAddress()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest android.media.AudioAttributes getAudioAttributes()">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder Builder(android.media.AudioFocusRequest) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setAcceptsDelayedFocusGain(boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setAudioAttributes(android.media.AudioAttributes)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setAudioAttributes(android.media.AudioAttributes) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setFocusGain(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setForceDucking(boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener, android.os.Handler)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener, android.os.Handler) 0">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener, android.os.Handler) 1">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFocusRequest.Builder android.media.AudioFocusRequest.Builder setWillPauseWhenDucked(boolean)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFormat.Builder android.media.AudioFormat.Builder setChannelIndexMask(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFormat.Builder android.media.AudioFormat.Builder setChannelMask(int)">
    <annotation name="android.support.annotation.NonNull" />
  </item>
  <item name="android.media.AudioFormat.Builder android.media.AudioFormat.Builder setEncoding(int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.media.AudioFormat.ENCODING_DEFAULT, android.media.AudioFormat.ENCODING_PCM_8BIT, android.media.AudioFormat.ENCODING_PCM_16BIT, android.media.AudioFormat.ENCODING_PCM_FLOAT, android.media.AudioFormat.ENCODING_AC3, android.media.AudioFormat.ENCODING_E_AC3, android.media.AudioFormat.ENCODING_E_AC3_JOC, android.media.AudioFormat.ENCODING_DTS, android.media.AudioFormat.ENCODING_DTS_HD, android.media.AudioFormat.ENCODING_IEC61937, android.media.AudioFormat.ENCODING_AAC_HE_V1, android.media.AudioFormat.ENCODING_AAC_HE_V2, android.media.AudioFormat.ENCODING_AAC_LC, android.media.AudioFormat.ENCODING_AAC_ELD, android.media.AudioFormat.ENCODING_AAC_XHE, android.media.AudioFormat.ENCODING_AC4}" />
      <val name="flag" val="false" />
    </annotation>
  </item>
  <item name="android.media.AudioManager">
    <annotation name="android.support.annotation.SystemService">
      <val name="value" val="android.content.Context.AUDIO_SERVICE" />
    </annotation>
  </item>
  <item name="android.media.AudioManager float getStreamVolumeDb(int, int, int) 0">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.media.AudioManager.STREAM_VOICE_CALL, android.media.AudioManager.STREAM_SYSTEM, android.media.AudioManager.STREAM_RING, android.media.AudioManager.STREAM_MUSIC, android.media.AudioManager.STREAM_ALARM, android.media.AudioManager.STREAM_NOTIFICATION, android.media.AudioManager.STREAM_DTMF, android.media.AudioManager.STREAM_ACCESSIBILITY}" />
      <val name="flag" val="false" />
    </annotation>
  </item>
  <item name="android.media.AudioManager float getStreamVolumeDb(int, int, int) 2">
    <annotation name="android.support.annotation.IntDef">
      <val name="value" val="{android.media.AudioDeviceInfo.TYPE_BUILTIN_EARPIECE, android.media.AudioDeviceInfo.TYPE_BUILTIN_SPEAKER, android.media.AudioDeviceInfo.TYPE_WIRED_HEADSET, android.media.AudioDeviceInfo.TYPE_WIRED_HEADPHONES, android.media.AudioDeviceInfo.TYPE_BLUETOOTH_SCO, android.media.AudioDeviceInfo.TYPE_BLUETOOTH_A2DP, android.media.AudioDeviceInfo.TYPE_HDMI, android.media.AudioDeviceInfo.TYPE_DOCK, android.media.AudioDeviceInfo.TYPE_USB_ACCESSORY, android.media.AudioDeviceInfo.TYPE_USB_DEVICE, android.media.AudioDeviceInfo.TYPE_USB_HEADSET, android.media.AudioDeviceInfo.TYPE_TELEPHONY, android.media.AudioDeviceInfo.TYPE_LINE_ANALOG, android.media.AudioDeviceInfo.TYPE_HDMI_ARC, android.media.AudioDeviceInfo.TYPE_LINE_DIGITAL, android.media.AudioDeviceInfo.TYPE_FM, android.media.AudioDeviceInfo.TYPE_AUX_L